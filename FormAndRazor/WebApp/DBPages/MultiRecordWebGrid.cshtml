@{
    Layout = "~/_Layout.cshtml";
    Page.Title = "WebGrid";
    //On the get method, we can't use Request.Form. We use the Get property, QueryString.

    //access the argument label from the sending page using .QueryString["xxx"]
    //QueryString returns either null (if argument did not exists) or
    //   a string value
    var categoryid = Request.QueryString["cid"];

    //check that a value was passed
    if(string.IsNullOrEmpty(categoryid))
    {
        Response.Redirect("MultiRecordQuery.cshtml");
    }

    //query the database using the passed value
    var db = Database.Open("NWDB");
    var scalarcommand = "SELECT CategoryName "
                        + "FROM Categories "
                        + "WHERE CategoryID = @0";
    //QueryValue returns a single value (not a record) from the  query
    //this value will be used in titling the WebGrid display
    var categoryname = db.QueryValue(scalarcommand, categoryid);

    var querycommand = "SELECT ProductID, ProductName, UnitPrice, UnitsInStock, Discontinued "
                        + "FROM Products "
                        + "WHERE CategoryID = @0 "
                        + "ORDER BY 2";
    var results = db.Query(querycommand, categoryid);

    //create an instance of WebGrid
    //notice the collection is passed at the time of instantiation

    var gridinstance = new WebGrid(results);
    //This one actually wants your dataset, so we put in results.
}
@section banner{
    <h1>DataBase: WebGrid Query</h1>
}

<div class="row">
    <div class="col-sm-12">
        <span style="font-size:x-large"><strong>Products for @categoryname</strong></span>
        <!--Display the WebGrid instance in its default display-->
        @gridinstance.GetHtml(
       tableStyle: "table table-bordered table-striped table-hover")
        <!--If we use GetHTML alone, we'd get a default table with crowding.-->
    </div>
</div>

@section footer{
    &copy; CPSC1517 Nait 2019, all rights reserved
}

