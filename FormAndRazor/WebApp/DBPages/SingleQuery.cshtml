@{
    Layout = "~/_Layout.cshtml";
    Page.Title = "Single Query";

    var searcharg = Request.Form["searcharg"];
    var regionid = "";
    var description = "";
    var thebutton = Request.Form["formbutton"];

    //Remember the first pass, the incoming data value will be null b/c the form has yet to be displayed.
    if(string.IsNullOrEmpty(searcharg))
    {
        searcharg = "0";
    }

    //We need to connect to the DB which has the data. We need to know the connection string name to this DB.
    var db = Database.Open("NWDB");

    //Now we need to create the command that will be sent to the DB.
    //You can code your commands over multiple physical lines!
    //Argument values will be indicated in your command using placeholders (@n where n is an index). 
    //If we code on multiple lines, put a blank as the last character, or we're going to get bad code when its concatenated.
    var querycommand = "SELECT RegionID, RegionDescription "
                        + "FROM Region "
                        + "WHERE RegionID = @0";
    //Execute the command and obtain the results. Placeholders will be given values during this process. 
    //Order of values for placeholders is important!
    //.QuerySingle() is used when you expect a single record to be returned.
    //.Query() when you expect 0, 1 or more records to be returned.
    //.QueryValue() used when a single value (NOT record) is to be returned. Like Count.
    var results = db.QuerySingle(querycommand, searcharg);

}
@section banner {
    <h1>Database: Single Query</h1>
}

@if (IsPost)
{
    //Determine submit button pressed
    if (thebutton.Equals("clear"))
    {
        searcharg = "0";
        regionid = "";
        description = "";
    }
    else
    {
        //determine if there is anything to display
        //for .QuerySingle() use xxx == null
        //for .Query() use xxx.Count() == 0
        if (results == null)
        {
            //region id not on database
            <p><span style="color:mediumblue">Region ID not found.</span></p>
            regionid = "";
            description = "";
        }
        else
        {
            //region record was found on the db, so display it
            //There are 2 techniques to access data off your resulting db record.
            //a. Using an index: xxx[index] where index is the column index. Runs from 0. So RegionID in querycommand is in place 0.
            //b. Using the column title property name: xxx.columntitlepropertyname

            regionid = results[0].ToString(); //First column on record: RegionID here.
            description = results.RegionDescription; //2nd column, or RegionDescription            
        }
    }
}


<form id="theform" method="post">
    <div class="row">
        <div class="col-sm-4">
            <label for="searcharg">Enter Region ID:</label>
            <input type="number" id="searcharg" name="searcharg"
                   placeholder="enter region id" step="1" min="0"
                   value="@searcharg" />
            <br />
            <button type="submit" id="formbutton" name="formbutton"
                    value="search" class="btn btn-primary">
                Search
            </button>
            &nbsp;&nbsp;
            <button type="submit" id="formbutton" name="formbutton"
                    value="clear" class="btn">
                Clear
            </button>
        </div>
        <div class="col-sm-8">
            <label for="regionid">Region ID:</label>
            <input type="text" id="regionid" name="regionid"
                   value="@regionid" />
            <br />
            <label for="description">Region Name:</label>
            <input type="text" id="description" name="description"
                   value="@description" />
            <br />
        </div>
    </div>
</form>


@section footer{
    &copy; CPSC1517 Nait 2019, all rights reserved
}
